<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.woniu.springboot_vue.mapper.AccountMapper">

    <resultMap id="BaseResultMap" type="com.woniu.springboot_vue.entity.Account">
            <id property="id" column="id" jdbcType="INTEGER"/>
            <result property="accountName" column="account_name" jdbcType="VARCHAR"/>
            <result property="accountNo" column="account_no" jdbcType="INTEGER"/>
            <result property="accountBalance" column="account_balance" jdbcType="INTEGER"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,account_name,account_no,
        account_balance
    </sql>

    <select id="queryAll" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from account
        <where>
            <if test="AccountName!=null and AccountName!=''">
                account_name like '%${AccountName}%'
            </if>
        </where>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from account
        where  id = #{id,jdbcType=INTEGER} 
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from account
        where  id = #{id,jdbcType=INTEGER} 
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.woniu.springboot_vue.entity.Account" useGeneratedKeys="true">
        insert into account
        ( id,account_name,account_no
        ,account_balance)
        values (#{id,jdbcType=INTEGER},#{accountName,jdbcType=VARCHAR},#{accountNo,jdbcType=INTEGER}
        ,#{accountBalance,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.woniu.springboot_vue.entity.Account" useGeneratedKeys="true">
        insert into account
        <trim prefix="(" suffix=")" suffixOverrides=",">
                <if test="id != null">id,</if>
                <if test="accountName != null">account_name,</if>
                <if test="accountNo != null">account_no,</if>
                <if test="accountBalance != null">account_balance,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
                <if test="id != null">#{id,jdbcType=INTEGER},</if>
                <if test="accountName != null">#{accountName,jdbcType=VARCHAR},</if>
                <if test="accountNo != null">#{accountNo,jdbcType=INTEGER},</if>
                <if test="accountBalance != null">#{accountBalance,jdbcType=INTEGER},</if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.woniu.springboot_vue.entity.Account">
        update account
        <set>
                <if test="accountName != null">
                    account_name = #{accountName,jdbcType=VARCHAR},
                </if>
                <if test="accountNo != null">
                    account_no = #{accountNo,jdbcType=INTEGER},
                </if>
                <if test="accountBalance != null">
                    account_balance = #{accountBalance,jdbcType=INTEGER},
                </if>
        </set>
        where   id = #{id,jdbcType=INTEGER} 
    </update>
    <update id="updateByPrimaryKey" parameterType="com.woniu.springboot_vue.entity.Account">
        update account
        set 
            account_name =  #{accountName,jdbcType=VARCHAR},
            account_no =  #{accountNo,jdbcType=INTEGER},
            account_balance =  #{accountBalance,jdbcType=INTEGER}
        where   id = #{id,jdbcType=INTEGER} 
    </update>
</mapper>
